import {UserSocialRating} from "../entity/User";
import {RatingDao} from "../dao/RatingDao";
import {UserDao} from "../dao/UserDao";
import {RatingCatalog} from "./RatingCatalog";
import {ImageTextReply, Reply, TextReply} from "../api/Reply";

export class RatingService {
    private dao: RatingDao;
    private userDao: UserDao;

    constructor(dao: RatingDao, userDao: UserDao) {
        this.dao = dao;
        this.userDao = userDao;
    }

    async changeRating(userId: number, chatId: number, ratingValue: number) {
        const userWithRating = await this.dao.getRating(userId, chatId);
        const user = await this.userDao.getUser(userId, chatId);
        if (userWithRating == null) {
            await this.dao.addUserSocialRating(userId, chatId);
        }
        await this.dao.changeUserRating(userId, chatId, ratingValue);
        if (ratingValue < 0) {
            return `–ü—Ä–∏–Ω—è—Ç–æ. –¢–≤–æ—è ${user?.firstName} –ø–æ—Å—Ç–∏—Ç—å –±–∞—è–Ω - —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –ø–∞—Ä—Ç–∏—è. –ú–∏–Ω—É—Å –ø–æ—Ä—Ü–∏—è —Ä–∏—Å`;
        } else {
            return `–¢–≤–æ—è ${user?.firstName} —Ä–∞–¥–æ–≤–∞—Ç—å –°–∏. –ü–ª—é—Å –ø–æ—Ä—Ü–∏—è —Ä–∏—Å`;
        }
    }

    async processSticker(ctx) {
        let userIdToProcess = ctx.message.reply_to_message.from.id
        let chatIdToProcess = ctx.message.reply_to_message.chat.id

        if (ctx.message.from.id === ctx.message.reply_to_message.from.id) {
            ctx.reply("–•–æ—Ç–µ—Ç—å –Ω–∞–±–∏—Ç—å —Ä–µ–π—Ç–∏–Ω–≥ —Å–µ–±—è? ËÇÆËÑèÁöÑËá≠Áå™ !")
            return;
        }

        let ratingChange = 0
        if (ctx.message.sticker.set_name != null) {
            try {
                ratingChange = this.processStickerPack(ctx.message.sticker.set_name, ctx.message.sticker.file_unique_id)
            } catch (e) {
                ctx.reply(e.message)
            }
        } else
            switch (ctx.message.sticker.emoji) {
                case 'üëé': {
                    ratingChange = -10
                    break
                }
                case 'üëç': {
                    ratingChange = +10
                    break
                }
                default: {
                    ratingChange = 0
                }
            }

        if (ratingChange != 0) {
            ctx.reply(await this.changeRating(userIdToProcess, chatIdToProcess, ratingChange))
        }
    }

    async getRating(userId: number, chatId: number): Promise<UserSocialRating> {
        return this.dao.getRating(userId, chatId);
    }

    async getRatingForAllUsers(chatId: number): Promise<UserSocialRating[]> {
        return this.dao.getRatingForAllUsers(chatId)
    }

    async addUserSocialRating(userId: number, chatId: number) {
        await this.dao.addUserSocialRating(userId, chatId)
    }

    private processStickerPack(setName: string, file_unique_id: string): number {
        const stickerPackCatalog = RatingCatalog.catalog[setName]
        if (stickerPackCatalog == null) {
            return 0
        }

        const stickerDesc = stickerPackCatalog[file_unique_id]
        if (stickerDesc != null) {
            return stickerDesc.ratingValue;
        } else {
            throw new Error(`–ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å—Ç–∏–∫–µ—Ä file_id = ${file_unique_id} `)
        }
    }

    async prepareRatingMessage(chatId: number): Promise<Array<Reply>> {

        const usersById = (await this.userDao.getUsersInChat(chatId))
            .reduce((obj, item) => ({...obj, [item.userId]: item}), {})

        const usersRating = await this.getRatingForAllUsers(chatId);

        const responses = new Array<Reply>();
        if (usersRating.length >= 3) {
            const firstUserRating = usersRating.shift();
            const firstUser = usersById[firstUserRating.userId]

            responses.push(new ImageTextReply(
                `üá®üá≥ –ü–∞—Ä—Ç–∏—è –≥–µ—Ä–æ–π ${firstUser?.firstName ?? firstUser?.username} (@${firstUser?.username}) —Ç–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ ${firstUserRating.socialRating}!\n–°–∞–º—ã–π —Å–∏–ª—å–Ω—ã–π –∏ —É–º–Ω—ã–π! –ü—É—Å—Ç—å –Ω–µ—Ñ—Ä–∏—Ç–æ–≤—ã–π –∂–µ–∑–ª —Ç–≤–µ—Ä–¥—ã–π –∫—Ä–µ–ø–∫–∏–π –∫–∞–∫ –ü–∞—Ä—Ç–∏—è!!`,
                "image_sexy_man.jpeg",
                true
            ))
            if (usersRating.length > 0) {
                let message = '–û—Å—Ç–∞–ª—å–Ω—ã–µ —á–ª–µ–Ω –ø–∞—Ä—Ç–∏—è\n';
                for (let rating of usersRating) {
                    const user = usersById[rating.userId]
                    let line = `‚≠ê ${user?.firstName ?? user?.username} —Ç–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ ${rating.socialRating}\n`
                    message += line
                }
                responses.push(new TextReply(message))
            }
        } else {
            let message = "üá®üá≥ –ü–∞—Ä—Ç–∏—è –≥–æ—Ä–¥–∏—Ç—Å—è –≤–∞–º!\n";
            for (let rating of usersRating) {
                const user = usersById[rating.userId]
                let line = `‚≠ê ${user?.firstName ?? user?.username} —Ç–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ ${rating.socialRating}\n`
                message += line
            }
            responses.push(new TextReply(message))
        }
        return responses
    }

}
